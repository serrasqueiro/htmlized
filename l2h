def latin1_to_html (unicrap):
  """This takes a UNICODE string and replaces Latin-1 characters with
      something equivalent in html. It returns a plain ASCII string. 
      This function makes a best effort to convert Latin-1 characters into 
      ASCII equivalents. It does not just strip out the Latin-1 characters.
      All characters in the standard 7-bit ASCII range are preserved. 
      In the 8th bit range all the Latin-1 accented letters are converted 
      to unaccented equivalents. Most symbol characters are converted to 
      something meaningful. Anything not converted is deleted.
  """
  xlate={0xc0:'&Agrave;', 0xc1:'&Aacute;', 0xc2:'&Acirc;', 0xc3:'&Atilde;', 0xc4:'&Auml;', 0xc5:'&Aring;',
      0xc6:'Ae', 0xc7:'C',
      0xc8:'&Egrave;', 0xc9:'&Eacute;', 0xca:'E', 0xcb:'E',
      0xcc:'&Igrave;', 0xcd:'&Iacute;', 0xce:'I', 0xcf:'I',
      0xd0:'Th', 0xd1:'N',
      0xd2:'&Ograve;', 0xd3:'&Oacute;', 0xd4:'O', 0xd5:'O', 0xd6:'O', 0xd8:'O',
      0xd9:'&Ugrave;', 0xda:'&Ugrave;', 0xdb:'U', 0xdc:'U',
      0xdd:'Y', 0xde:'th', 0xdf:'ss',
      0xe0:'&agrave;', 0xe1:'&aacute;', 0xe2:'&acirc;', 0xe3:'&atilde;', 0xe4:'&auml;', 0xe5:'&aring;',
      0xe6:'ae', 0xe7:'c',
      0xe8:'&egrave;', 0xe9:'&eacute;', 0xea:'e', 0xeb:'e',
      0xec:'&igrave;', 0xed:'&iacute;', 0xee:'i', 0xef:'i',
      0xf0:'th', 0xf1:'n',
      0xf2:'&ograve;', 0xf3:'&oacute;', 0xf4:'o', 0xf5:'o', 0xf6:'o', 0xf8:'o',
      0xf9:'&ugrave;', 0xfa:'&uacute;', 0xfb:'u', 0xfc:'u',
      0xfd:'y', 0xfe:'th', 0xff:'y',
      0xa1:'!', 0xa2:'{cent}', 0xa3:'{pound}', 0xa4:'{currency}',
      0xa5:'{yen}', 0xa6:'|', 0xa7:'{section}', 0xa8:'{umlaut}',
      0xa9:'{C}', 0xaa:'{^a}', 0xab:'<<', 0xac:'{not}',
      0xad:'-', 0xae:'{R}', 0xaf:'_', 0xb0:'{degrees}',
      0xb1:'{+/-}', 0xb2:'{^2}', 0xb3:'{^3}', 0xb4:"'",
      0xb5:'{micro}', 0xb6:'{paragraph}', 0xb7:'*', 0xb8:'{cedilla}',
      0xb9:'{^1}', 0xba:'{^o}', 0xbb:'>>', 
      0xbc:'{1/4}', 0xbd:'{1/2}', 0xbe:'{3/4}', 0xbf:'?',
      0xd7:'*', 0xf7:'/'
      }

  r = ''
  for i in unicrap:
      if xlate.has_key(ord(i)):
          r += xlate[ord(i)]
      elif ord(i) >= 0x80:
          pass
      else:
          r += str(i)
  return r
